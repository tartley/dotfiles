#!/usr/bin/env bash

# Wrapper for nvim. If we aren't running in a terminal, launch one for nvim.
#
# May be invoked as `ni` (like 'vi' for nvim), which only creates a terminal if needed,
# or as `nw`, which always creates a new terminal.
#
# That means 'ni' can be called directly from the command-line, used as
# EDITOR=ni, and invoked from contexts with no terminal, such as a desktop
# custom shortcut key.
#
# Beware that if we do open a new terminal window, it runs asynchronously, so
# don't use EDITOR=nw.
#
# Fallback to vim if nvim is not installed, so I can type the same thing in an lxc,
# for example.

# One-off setup. Provide the 'nw' alias.
(
    cd "$HOME/bin"
    ln -sf ni nw
)

# Should we create a new terminal to run nvim in?
if [ "$(tty)" = "not a tty" ]; then
    newterm=true
else
    if [[ "$0" = */nw ]] ; then
        newterm=true
    else
        newterm=false
    fi
fi

# Prefer nvim, fallback to vim
editor=nvim
if ! type -P nvim >/dev/null; then
    editor=vim
fi

# If we are not in a terminal, open one
if [ "$newterm" = true ] ; then
    gnome-terminal -- $editor "$@"
else
    $editor "$@"
fi

