#!/usr/bin/env -S bash -i
# The above flags let this script use functions (eg termname) from the .bashrc

# ssh to given container or project alias.
# Usage:
#
#   lssh <project-alias>
#
# Requires containers to have an IPv4 address, and name resolution to be working.
# Use 'lalias' to list the available containers and their aliases.

set -eu # -x

if [ "$#" -ne 1 ] ; then
    echo "Usage: lssh <project-alias>"
    echo "See available project aliases using 'lalias' command."
    exit 1
fi

alias="$1"
container=$(lalias $alias)

# We call ssh with:
#
#   -A: Forward ssh-agent. So we can, for example, hit github using passphrases
#       cached by ssh-agent.
#   -t: Force pseudo-terminal allocation. (I forget why.)
#
# cd to the same dir as we're currently in on the host, if it exists. Fallback
# to a dir named for the project alias (eg if connecting to container 'ident',
# cd $HOME/src/ident, which ought to exist. If that fails, we'll be in $HOME.
# Exec a new shell to let us type commands from the resulting dir.
ssh -A -t "${container}.lxd" -- \
    "cd $(pwd) 2>/dev/null || \
     cd "$HOME/src/$alias" 2>/dev/null ; \
     exec -l $SHELL"

# Restore the our host's regular title for the terminal window.
termname

